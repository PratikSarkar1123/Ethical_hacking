Adobe Network Pentesting ‚Äì 25 June 2025

  Objective

    The objective of this task was to perform network penetration testing on 40 employee machines. A list of internal IP addresses was provided. Using Nmap and OpenVAS, vulnerabilities were identified, reported, and mitigation strategies were suggested.

---

  Tools Used

    - Nmap ‚Äì Used for initial network scanning and service discovery.
    - OpenVAS ‚Äì Used for in-depth vulnerability scanning and reporting.

---

   Nmap Scanning on List of IP Addresses

    Command Used

      nmap -sV --script=vuln -iL targets.txt -oN vuln_report.txt
    
    Explanation

      -sV: Enables version detection of services.
      --script=vuln: Runs vulnerability detection scripts from the Nmap Scripting Engine.
      -iL targets.txt: Reads target IP addresses from a file.
      -oN vuln_report.txt: Outputs results in a readable text file.

    Outcome
      Detected services like SSH, HTTP, SMB, and FTP.

    Flagged possible vulnerabilities.
      Output was used as input for OpenVAS for deeper analysis.
      OpenVAS Vulnerability Scanning
    
    What is OpenVAS?
      OpenVAS (Open Vulnerability Assessment System) is an open-source vulnerability scanner by Greenbone. It performs thorough checks for CVEs, missing patches, and weak configurations.

    Features
     
      Detects missing patches, misconfigurations, and vulnerable software.
      Uses up-to-date vulnerability feeds.
      Rates vulnerabilities using CVSS.

    Suggests remediation with vendor links.

      Installing OpenVAS on Kali Linux
      Installation Steps

    Update and upgrade system
      sudo apt update && sudo apt upgrade -y

    Install OpenVAS
      sudo apt install openvas -y

    Set up OpenVAS and initialize feeds
      sudo gvm-setup
      Note: During setup, a username and password will be provided for web access.

    Start OpenVAS services
      sudo gvm-start

    Check if services are properly configured
      sudo gvm-check-setup
      Accessing OpenVAS Web Interface
      Navigate to https://localhost:9392 in your browser.
      Login using the credentials generated during setup.

    Updating Vulnerability Feeds
      To update feed data for better accuracy and latest CVEs:


      sudo greenbone-feed-sync --type GVMD_DATA
      sudo greenbone-feed-sync --type SCAP
      sudo greenbone-feed-sync --type CERT
      sudo greenbone-nvt-sync
      sudo greenbone-scapdata-sync
      sudo greenbone-certdata-sync

    Creating and Scanning Target List in OpenVAS
      Steps followed:

      Created a CSV file with all 40 employee IP addresses.
      Imported the file into OpenVAS as a Target List.
      Configured a custom scan profile using ‚ÄúFull and Fast Ultimate‚Äù.
      Initiated the scan from the dashboard. 
      Exported the results in HTML, PDF, and XML formats.
      Results and Reporting

    OpenVAS provided detailed results including:

      Detected services and operating systems.
      List of vulnerabilities with severity ratings.
      CVSS scores and CVE identifiers.  
      Suggested mitigation steps and links to patches.

    
    Summary of Tasks Performed

      Validated and confirmed the list of 40 internal IPs.
      Performed Nmap scanning to identify active services and known issues.
      Installed and configured OpenVAS on Kali Linux.
      Updated vulnerability databases.
      Performed full scans with OpenVAS and generated reports.
      Identified a critical vulnerability and documented remediation.


Nmap Vulnerability Scanning Summary

‚úÖ 1. Host Discovery
 
  Performed a host discovery to identify live systems from a list of 40 IP addresses:
  nmap -sn -iL target_ip
  This helped isolate active hosts for further scanning.

üõ†Ô∏è 2. Vulnerability Scan Using Nmap Scripts
    Executed Nmap's built-in NSE vulnerability scripts:
    nmap -iL target_ip --script=vuln -oN nmap_scan.txt
    This identified known vulnerabilities on the active hosts.

‚ö†Ô∏è 3. Key Vulnerabilities Discovered

    Cross-Site Scripting (XSS)
    Cross-Site Request Forgery (CSRF)
    Denial of Service (DoS) possibilities
    Outdated OpenSSH versions
    Apache HTTP Server with known issues

üîé 4. Service Enumeration and Version Detection
 
    Identified open ports and running services:
    nmap -sV -iL target_ip -oN version_scan.txt
    Mapped service versions to known CVEs and security advisories.

üìå 5. Outcome
    
    Multiple services were found to be outdated and vulnerable.
    Specific CVEs were mapped using service versions (e.g., OpenSSH, Apache).
    These insights are being used to report and suggest mitigation steps.


Disclaimer
This penetration test was authorized and conducted on internal infrastructure. All activities followed internal security policies and procedures.
