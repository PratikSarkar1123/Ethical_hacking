# Adobe Network Pentesting – 25 June 2025

## Objective

The objective of this task was to perform network penetration testing on 40 employee machines. A list of internal IP addresses was provided. Using Nmap and OpenVAS, vulnerabilities were identified, reported, and mitigation strategies were suggested.

---

## Tools Used

- Nmap – Used for initial network scanning and service discovery.
- OpenVAS – Used for in-depth vulnerability scanning and reporting.

---

## Nmap Scanning on List of IP Addresses

### Command Used

```bash
nmap -sV --script=vuln -iL targets.txt -oN vuln_report.txt
Explanation
-sV: Enables version detection of services.

--script=vuln: Runs vulnerability detection scripts from the Nmap Scripting Engine.

-iL targets.txt: Reads target IP addresses from a file.

-oN vuln_report.txt: Outputs results in a readable text file.

Outcome
Detected services like SSH, HTTP, SMB, and FTP.

Flagged possible vulnerabilities.

Output was used as input for OpenVAS for deeper analysis.

OpenVAS Vulnerability Scanning
What is OpenVAS?
OpenVAS (Open Vulnerability Assessment System) is an open-source vulnerability scanner by Greenbone. It performs thorough checks for CVEs, missing patches, and weak configurations.

Features
Detects missing patches, misconfigurations, and vulnerable software.

Uses up-to-date vulnerability feeds.

Rates vulnerabilities using CVSS.

Suggests remediation with vendor links.

Installing OpenVAS on Kali Linux
Installation Steps
bash
Copy
Edit
# Update and upgrade system
sudo apt update && sudo apt upgrade -y

# Install OpenVAS
sudo apt install openvas -y

# Set up OpenVAS and initialize feeds
sudo gvm-setup
Note: During setup, a username and password will be provided for web access.

bash
Copy
Edit
# Start OpenVAS services
sudo gvm-start

# Check if services are properly configured
sudo gvm-check-setup
Accessing OpenVAS Web Interface
Navigate to https://localhost:9392 in your browser.

Login using the credentials generated during setup.

Updating Vulnerability Feeds
To update feed data for better accuracy and latest CVEs:

bash
Copy
Edit
sudo greenbone-feed-sync --type GVMD_DATA
sudo greenbone-feed-sync --type SCAP
sudo greenbone-feed-sync --type CERT
sudo greenbone-nvt-sync
sudo greenbone-scapdata-sync
sudo greenbone-certdata-sync

Creating and Scanning Target List in OpenVAS
Steps followed:

Created a CSV file with all 40 employee IP addresses.

Imported the file into OpenVAS as a Target List.

Configured a custom scan profile using “Full and Fast Ultimate”.

Initiated the scan from the dashboard.

Exported the results in HTML, PDF, and XML formats.

Results and Reporting
OpenVAS provided detailed results including:

Detected services and operating systems.

List of vulnerabilities with severity ratings.

CVSS scores and CVE identifiers.

Suggested mitigation steps and links to patches.

Critical Finding
One high-severity vulnerability was identified:

Type: Command Injection

Affected Device: Smartwatch connected to internal Wi-Fi

CVSS Score: 9.8 (Critical)

Mitigation: Firmware update as per vendor’s recommendation

Summary of Tasks Performed
Validated and confirmed the list of 40 internal IPs.

Performed Nmap scanning to identify active services and known issues.

Installed and configured OpenVAS on Kali Linux.

Updated vulnerability databases.

Performed full scans with OpenVAS and generated reports.

Identified a critical vulnerability and documented remediation.

Repository Structure
Copy
Edit
Adobe-Network-Pentest/
├── README.md
├── targets.txt
├── vuln_report.txt
├── openvas_report.pdf
└── screenshots/
Disclaimer
This penetration test was authorized and conducted on internal infrastructure. All activities followed internal security policies and procedures.
